{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"Installation/","title":"Installation","text":""},{"location":"Installation/#nix","title":"Nix","text":"<p>First, add the repository to your flake inputs: <pre><code>inputs = {\n  frostbar.url = \"github:Ind-E/FrostBar\";\n\n  # ...\n};\n</code></pre></p> <p>Then, add it to <code>environment.systemPackages</code>:</p> <pre><code>{\n  pkgs,\n  inputs,\n  system,\n  ...\n}:\n{\n  environment.systemPackages = with pkgs; [\n\n    inputs.frostbar.packages.${system}.default\n    # ...\n  ]\n  # ...\n}\n</code></pre>"},{"location":"Installation/#cargo","title":"Cargo","text":"<p>First, clone the repository locally: <pre><code>git clone https://github.com/Ind-E/FrostBar\n</code></pre></p> <p>Then, navigate into the <code>FrostBar</code> directory and install using cargo:</p> <pre><code>cargo install --path .\n</code></pre>"},{"location":"Configuration/Introduction/","title":"Introduction","text":""},{"location":"Configuration/Introduction/#loading","title":"Loading","text":"<p>FrostBar will look for a configuration file at <code>$XDG_CONFIG_HOME/frostbar/config.kdl</code>. If no configuration file exists, a new one will be created with the contents of the default configuration file.</p> <p>The config file is live-reloaded. Whenever the file is saved, changes will automatically be applied. If the config file fails to parse, a notification will be sent.</p>"},{"location":"Configuration/Introduction/#syntax","title":"Syntax","text":"<p>The config is written in KDL.</p> <p>(Neo)Vim and Helix come with KDL syntax highlighting by default. VSCode users can install the KDL Extension.</p>"},{"location":"Configuration/Introduction/#comments","title":"Comments","text":"<p>Lines starting with <code>//</code> are comments; they are ignored.</p> <p>Sections starting with <code>/-</code> are commented out; Everything in that section is ignored.</p> <pre><code>/-time {\n    // Everything inside here is ignored.\n    format \"%H\\n%M\"\n}\n</code></pre>"},{"location":"Configuration/Introduction/#colors","title":"Colors","text":"<p>Colors can be specified as either:</p> <ul> <li> <p>Hex literals in the form of <code>#rrggbb</code>, <code>#rrggbbaa</code>, <code>#rgb</code>, or <code>#rgba</code>.</p> </li> <li> <p>Component values as space-separated numbers (<code>R G B</code> or <code>R G B A</code>, with alpha defaulting to 1.0).</p> </li> </ul> <p>Example:</p> <pre><code>// As a hex literal\nbackground \"#73F5AB\"\n\n// As RGB with alpha\nbackground 115 244 170 1.0\n\n// As RGB only (alpha defaults to 1.0)\nbackground 115 244 170\n</code></pre>"},{"location":"Configuration/Introduction/#planned-features","title":"Planned Features","text":"<ul> <li>change bar position (left, top, right, bottom)</li> <li>specify config file with cli argument</li> <li>change colors/styles of each module</li> </ul>"},{"location":"Configuration/Modules/","title":"Modules","text":"<p>FrostBar comes with a variety of modules that you can make use of. Each module may be added any number of times to the bar with different configurations for each.</p> <p>Here is a list of all currently avaialable modules (as of 10/2/25):</p> <pre><code>battery\ncava\nlabel\nmpris\nniri\ntime\n</code></pre>"},{"location":"Configuration/Modules/#common-configuration-options","title":"Common Configuration Options","text":"<p>There are a set of configurations that are common across (almost) all modules.</p>"},{"location":"Configuration/Modules/#mouse-binds","title":"Mouse Binds","text":"<p>This allows running commands when you interact with a widget with your mouse. Options include:</p> <pre><code>mouse-left\nmouse-right\nmouse-middle\nscroll-up\nscroll-down\nscroll-left\nscroll-right\n</code></pre> <p>After the mouse bind, you can specify the command to be run in 2 ways.</p> <p>The first way will NOT run the command in a shell and requires separating arguments in different string literals, like so: <pre><code>scroll-up \"wpctl\" \"set-volume\" \"@DEFAULT_SINK@\" \"3%+\"\n</code></pre></p> <p>The second way will run in a shell, allowing access to pipes and subshells. <pre><code>scroll-up sh=true \"wpctl set-volume @DEFAULT_SINK@ 3%+ &amp;&amp; echo hi\"\n</code></pre></p>"},{"location":"Configuration/Modules/#container-style","title":"Container Style","text":"<p>This allows customizing the style of the container surrounding a widget. Options include:</p> <pre><code>style {\n    text-color \"#fff\"\n    background \"#000\"\n    border {\n        color \"#fff\"\n        width 0.5\n        radius 10.0\n    }\n}\n</code></pre> <p>Colors may be specified as described by the Colors Section.</p>"},{"location":"Configuration/Modules/#text-color","title":"text-color","text":"<p>Affects the color of text inside the widget.</p>"},{"location":"Configuration/Modules/#background","title":"background","text":"<p>Affects the background color of the widget.</p>"},{"location":"Configuration/Modules/#border","title":"border","text":"<p>Affects the border around the widget.</p> <p>The border radius may also be specified per-corner like so: <pre><code>border {\n    radius {\n        top-left 10.0\n        top-right 0.0\n        bottom-left 0.0\n        bottom-right 10.0\n    }\n}\n</code></pre></p>"},{"location":"Configuration/Modules/#module-specific-configuration-options","title":"Module Specific Configuration Options","text":""},{"location":"Configuration/Modules/#battery","title":"Battery","text":"<pre><code>battery {\n    icon-size 22\n    charging-color \"#73F5AB\"\n}\n</code></pre>"},{"location":"Configuration/Modules/#icon-size","title":"icon-size","text":"<p>Affects the size of the battery icon.</p>"},{"location":"Configuration/Modules/#charging-color","title":"charging-color","text":"<p>Affects the color of the battery while plugged in. Use <code>text-color</code> in the <code>style</code> section to affect the color while not plugged in.</p>"},{"location":"Configuration/Modules/#cava","title":"Cava","text":"<pre><code>cava {\n    spacing 0.1\n    dynamic-color true\n    color \"#fff\"\n}\n</code></pre>"},{"location":"Configuration/Modules/#spacing","title":"spacing","text":"<p>Affects the spacing between bars in the audio visualizer, from 0.0 to 1.0.</p>"},{"location":"Configuration/Modules/#dynamic-color","title":"dynamic-color","text":"<p>Whether or not to source colors from the currently-playing song's album art. Defaults to true if not included.</p>"},{"location":"Configuration/Modules/#color","title":"color","text":"<p>if <code>dynamic-color</code> is enabled, affects the color of the bars when no album art is available. Otherwise, affects the color of the bars at all times.</p>"},{"location":"Configuration/Modules/#label","title":"Label","text":"<pre><code>label {\n    text \"text\"\n    size 22\n    tooltip \"tooltip\n}\n</code></pre>"},{"location":"Configuration/Modules/#text","title":"text","text":"<p>Text to be displayed by the label.</p>"},{"location":"Configuration/Modules/#size","title":"size","text":"<p>Size of the label text.</p>"},{"location":"Configuration/Modules/#tooltip","title":"tooltip","text":"<p>Text that appears in a tooltip when hovering over the label.</p>"},{"location":"Configuration/Modules/#mpris","title":"Mpris","text":"<p>The mpris module does not support the generic <code>style</code> or mouse binds settings. If there is music playing, the album art will be displayed. If there is an audio player where no album art is able to be retrieved (for example on Netflix), the placeholder will be shown instead. <code>placeholder-style</code> has the same options as the Container Style section.</p> <p>If multiple players are active at the same time, one album art will be shown for each. Mouse binds can be specified to interact with individual players. Possible actions for mouse binds include:</p> <pre><code>\"play\"\n\"pause\"\n\"play-pause\"\n\"next\"\n\"previous\"\n\"stop\"\n// in milliseconds. Can be negative\n\"seek\" 100\n</code></pre> <p>Here is an example config: <pre><code>mpris {\n    mouse-left \"play-pause\"\n    scroll-right \"seek\" 5000\n    scroll-left \"seek\" -5000\n    mouse-right \"next\"\n    mouse-middle \"stop\"\n\n\n    placeholder \"\udb81\udf5a\"\n    placeholder-style {\n        border {\n            width 1.0\n            color \"#fff\"\n            radius 0.0\n        }\n    }\n}\n</code></pre></p>"},{"location":"Configuration/Modules/#niri","title":"Niri","text":"<pre><code>niri {\n    spacing 10\n    workspace-offset -1\n}\n</code></pre>"},{"location":"Configuration/Modules/#spacing_1","title":"spacing","text":"<p>Spacing between workspaces.</p>"},{"location":"Configuration/Modules/#workspace-offset","title":"workspace-offset","text":"<p>Offset to apply to the index of each workspace. I use this with niri's <code>empty-workspace-above-first</code> option to start labeling workspaces at 0.</p>"},{"location":"Configuration/Modules/#time","title":"Time","text":"<pre><code>time {\n    format \"%H\\n%M\"\n    tooltip-format \"%a %b %-d\\n%-m/%-d/%y\"\n}\n</code></pre>"},{"location":"Configuration/Modules/#format","title":"format","text":"<p>Format string for displaying the time. See the chrono documentation for information on format specifiers.</p>"},{"location":"Configuration/Modules/#tooltip-format","title":"tooltip-format","text":"<p>Format string for displaying the tooltip. See the chrono documentation for information on format specifiers.</p>"},{"location":"Development/Setup/","title":"Setup","text":""},{"location":"Development/Setup/#step-1-clone-the-repository","title":"Step 1: Clone the repository","text":"<pre><code>git clone https://github.com/Ind-E/FrostBar\n</code></pre>"},{"location":"Development/Setup/#step-2-install-dependencies","title":"Step 2: Install Dependencies","text":""},{"location":"Development/Setup/#nix","title":"Nix","text":"<p>If using nix, run <code>nix develop</code> to enter a development shell with all needed dependencies. You could also use <code>direnv</code>.</p>"},{"location":"Development/Setup/#non-nix","title":"Non-Nix","text":"<p>TODO</p>"},{"location":"Development/Setup/#step-3-build-and-run-locally","title":"Step 3: Build and Run Locally","text":"<p>To run a development version locally, use <code>cargo run</code></p> <p>To run an optimized version, use <code>cargo run --release</code></p> <p>To enable profiling with Tracy, use <code>cargo run --features tracy</code></p>"}]}